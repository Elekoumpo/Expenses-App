{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","SelectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec65e97a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle]=useState('');\r\n    const [enteredAmount, setEnteredAmount]=useState('');\r\n    const [enteredDate, setEnteredDate]=useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n     } //Ovo smo iskoristili kako bi pokupili vrijednost koju korisnik unosi\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n       }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) =>{\r\n    event.preventDefault();\r\n\r\n    const expenseData={\r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(enteredDate)\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n    };\r\n\r\nreturn(\r\n<form onSubmit={submitHandler}> \r\n    <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n            <label>Title</label>\r\n            <input type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler} />\r\n        </div>    \r\n        <div className='new-expense__control'>\r\n            <label>Amount</label>\r\n            <input type='number'\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}/>\r\n        </div>    \r\n        <div className='new-expense__control'>\r\n            <label>Date</label>\r\n            <input type='date' \r\n            min=\"2019-01-01\" \r\n            max=\"2022-12-31\" \r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}/>\r\n        </div>  \r\n    </div>\r\n    <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n    </div>\r\n</form>\r\n)}\r\n\r\nexport default ExpenseForm;","import React, {useState} from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\"; \r\n\r\nconst NewExpense = (props) => {\r\n   const [isEditing, setIsEditing]= useState(false);\r\n    const SaveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\nconst startEditingHandler = () => {\r\nsetIsEditing(true); \r\n};\r\n\r\nconst stopEditingHandler =() => {\r\nsetIsEditing(false);\r\n};\r\n\r\nreturn <div className=\"new-expense\">\r\n{!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n{isEditing && <ExpenseForm onSaveExpenseData={SaveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n</div>\r\n};\r\n\r\nexport default NewExpense;","import './Card.css'\r\n\r\nfunction Card(props){\r\nconst classes = 'card ' + props.className;\r\nreturn <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n    const month=props.date.toLocaleString('en-US', {month: 'short'})\r\n    const day=props.date.toLocaleString('en-US', {day: '2-digit'})\r\n    const year=props.date.getFullYear();\r\n    \r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card> </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\nif(props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n}\r\n\r\nreturn (<ul className=\"expenses-list\">\r\n\r\n{props.items.map((expense) => ( //u Reactu nema if ili for u curly braces, zbog tog pisemo ovakav izraz a ? jer ternarni operator u JSu po defaultu, ako je tacna tvrdnja ispisi No expenses, otherwise renderuj standardno listu\r\n    <ExpenseItem\r\n      key={expense.id}\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}\r\n    />\r\n  ))}  \r\n</ul>\r\n);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\nlet barFillHeight='0%';\r\n\r\nif (props.maxValue > 0) {\r\n barFillHeight=Math.round((props.value / props.maxValue) * 100) + '%';\r\n}\r\n\r\nreturn( \r\n<div className=\"chart-bar\">\r\n    <div className='chart-bar__inner'>\r\n         <div className='chart-bar__fill' style={{ height : barFillHeight }}></div>\r\n</div>\r\n         <div className='chart-bar__label'>{props.label}</div>\r\n</div>);\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\nconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\nconst totalMaximum = Math.max(...dataPointValues);\r\n\r\nreturn (\r\n  <div className=\"chart\">\r\n    {props.dataPoints.map((dataPoint) => (\r\n      <ChartBar\r\n        key={dataPoint.label}\r\n        value={dataPoint.value}\r\n        maxValue={totalMaximum}\r\n        label={dataPoint.label}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\nconst chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 }\r\n];\r\n\r\nfor (const expense of props.expenses) {\r\nconst expenseMonth = expense.date.getMonth(); //starting at 0 => January => 0\r\nchartDataPoints[expenseMonth].value += expense.amount;\r\n}\r\n\r\n\r\nreturn <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./ExpensesFilter.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nconst Expenses= (props) => {\r\nconst [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n\r\n\r\nconst filterChangeHandler = (SelectedYear) => {\r\nsetFilteredYear(SelectedYear);\r\n};\r\n\r\nconst filteredExpenses = props.items.filter(expense =>{\r\n  return expense.date.getFullYear().toString() === filteredYear; //funkcija napravljena za filtriranje, dakle ako zelimo prikazati odredjenu godinu, poredimo je sa filteredYear i zadrzavamo u pomocnom nizu ako je true\r\n});\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />   \r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\nconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\n  const addExpenseHandler = expense =>{\nsetExpenses(prevExpenses =>{\n  return [expense, ...prevExpenses]\n});\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}